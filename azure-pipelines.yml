variables:
- group: ApiKeys

trigger:
  branches:
    exclude:
    - noci/*
  tags:
    include:
    - '*'

stages:

- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: bash ./build.sh
    - publish: 'PublishOutput/'
      artifact: NuGets
    - task: PublishTestResults@2
      condition: always()
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/TestResults/*.trx'
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '**/TestResults/**/coverage.cobertura.xml'
- stage: DeployToPreRelease
  condition: ne(variables['Build.Reason'], 'PullRequest')
  jobs:
  - deployment: GitHubDeploy
    displayName: Push NuGet Packages to Repo Feed
    pool:
      vmImage: 'Ubuntu-latest'
    environment: 'gh-nuget'
    continueOnError: false
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            patterns: '**/*.nupkg'
          - script: |
              dotnet nuget push --api-key $API_KEY --source "${SOURCE}" $(Pipeline.Workspace)/**/*.nupkg
            env:
              SOURCE: https://nuget.pkg.github.com/iwillspeak/index.json
              API_KEY: $(GhApiKey)
- stage: DeployToLive
  condition: and(ne(variables['Build.Reason'], 'PullRequest'), or(startsWith(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
  jobs:
  - deployment: NuGetDeploy
    displayName: Push NuGet Packages to Nuget.org
    pool:
      vmImage: 'Ubuntu-latest'
    environment: 'live-nuget'
    continueOnError: true
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            patterns: '**/*.nupkg'
          - script: |
              dotnet nuget push --api-key $API_KEY --source "${SOURCE}" $(Pipeline.Workspace)/**/*.nupkg
            env:
              SOURCE: https://api.nuget.org/v3/index.json
              API_KEY: $(NuGetOrgApiKey)